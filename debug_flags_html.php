<?php
// Debug the actual HTML being generated by ApplicationView
require_once 'bootstrap.php';
require_once 'core/LanguageDetector.php';
require_once 'core/SessionManager.php';
require_once 'models/LanguageModel.php';
require_once 'views/ApplicationView.php';

session_start();

try {
    $languageModel = new LanguageModel();
    $sessionManager = new SessionManager();
    
    // Create ApplicationView
    $view = new ApplicationView($languageModel, $sessionManager);
    
    echo "<h1>Debug: Language Flags HTML Generation</h1>";
    
    // Use reflection to call the private renderLanguageFlags method
    $reflection = new ReflectionClass($view);
    $method = $reflection->getMethod('renderLanguageFlags');
    $method->setAccessible(true);
    
    $flagsHtml = $method->invoke($view);
    
    echo "<h2>Generated HTML (Raw):</h2>";
    echo "<textarea style='width: 100%; height: 300px; font-family: monospace;'>" . htmlspecialchars($flagsHtml) . "</textarea>";
    
    echo "<h2>Generated HTML (Rendered):</h2>";
    echo "<div style='border: 2px solid #ccc; padding: 20px; background: #f9f9f9;'>";
    echo $flagsHtml;
    echo "</div>";
    
    echo "<h2>Available Languages:</h2>";
    $supportedLanguages = $languageModel->getSupportedLanguages();
    echo "<pre>" . print_r($supportedLanguages, true) . "</pre>";
    
    echo "<h2>Language Files Check:</h2>";
    foreach (array_slice($supportedLanguages, 0, 5) as $lang) {
        $langFile = LANGUAGE_PATH . $lang . '.php';
        echo "<p>{$lang}: " . (file_exists($langFile) ? "✅ EXISTS" : "❌ MISSING") . " ({$langFile})</p>";
    }
    
} catch (Exception $e) {
    echo "<h2>Error:</h2>";
    echo "<p style='color: red;'>" . htmlspecialchars($e->getMessage()) . "</p>";
    echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
}
?>
